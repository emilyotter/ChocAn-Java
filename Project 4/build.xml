<?xml version="1.0" encoding="UTF-8"?>

<!-- Project: Project4 (Ant Build Script) -->
<project name="Project4" default="run" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <!-- Define project properties -->
    <property name="src.dir" value="src" />
    <property name="build.dir" value="build" />
    <property name="dist.dir" value="dist" />
    <property name="jar.file" value="release/Project4.jar" />
    <property name="main.class" value="Terminal" />
    <property name="javadoc.dir" value="doc" />
    <property name="lib.dir" value="lib" />

    <!-- Clean build and distribution directories -->
    <target name="cleanall">
        <delete dir="${build.dir}" failonerror="false" />
        <delete dir="${dist.dir}" failonerror="false" />
        <delete file="${jar.file}" failonerror="false" />
    </target>
    
    <!-- Define the classpath -->
    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar" />
    </path>

    <!-- Define Ivy Tasks and Settings -->
    <taskdef resource="org/apache/ivy/ant/antlib.xml" classpathref="classpath" />
    <ivy:settings file="ivysettings.xml" />

    <!-- Resolve project dependencies -->
    <target name="resolve" depends="cleanall">
        <ivy:resolve />
        <ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" />
    </target>

    <!-- Compile Java source code -->
    <target name="compile" depends="resolve">
        <mkdir dir="${build.dir}/classes" />
        <javac srcdir="${src.dir}" destdir="${build.dir}/classes">
            <classpath>
                <path refid="classpath" />
            </classpath>
        </javac>
    </target>

    <!--Test Target-->
    <target name="test" depends="compile">
        <mkdir dir="${build.dir}/test" />
        <javac srcdir="${src.dir}" destdir="${build.dir}/test">
            <classpath>
                <path refid="classpath" />
            </classpath>
        </javac>
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <path refid="classpath" />
                <pathelement location="${build.dir}/test" />
            </classpath>
            <formatter type="plain" usefile="false" />
            <batchtest fork="yes" todir="${build.dir}/test">
                <fileset dir="${src.dir}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Create a JAR file with a manifest specifying the Main-Class -->
    <target name="jar" depends="compile, resolve">
        <mkdir dir="${dist.dir}" />
        <jar destfile="${jar.file}" basedir="${build.dir}/classes">
            <manifest>
                <attribute name="Main-Class" value="${main.class}" />
            </manifest>
        </jar>
    </target>

    <!-- Run the Java application from the JAR file -->
    <target name="run" depends="jar">
        <java jar="${jar.file}" fork="true">
            <classpath>
                <path refid="classpath" />
                <path location="${jar.file}" />
            </classpath>
        </java>
    </target>

    <!-- Clean build and distribution directories -->
    <target name="clean">
        <delete dir="${build.dir}" failonerror="false" />
        <delete dir="${dist.dir}" failonerror="false" />
    </target>
    
    <!-- Generate Javadoc documentation -->
    <target name="javadoc" depends="compile">
        <mkdir dir="${javadoc.dir}" />
        <javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}" />
    </target>
</project>
